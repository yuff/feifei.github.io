
Javascript标准库Array常用方法之map
https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/map
array.map(callback[, thisArg])
其中：
callback：方法，原数组中的元素经过该方法后返回一个新的元素
	currentValue： callback的第一个参数，数组中当前被传递的元素
	index： callback的第二个参数，数组中当前元素的索引
	array: callback的第三个参数，调用map方法的array本身
thisArg
	执行callback函数是this指向的对象

var array=[1,2,3,4,5];
function ExecuteContext() {
this.value = 6;
}
array.map(function(a,b) {return a*b + this.value;}, new ExecuteContext() )
//运行结果[6, 8, 12, 18, 26]


关于map方法，有个有名的面试题（出自http://javascript-puzzlers.herokuapp.com/）
// 下面的语句返回什么呢:
["1", "2", "3"].map(parseInt);
// 你可能觉的会是[1, 2, 3]
// 但实际的结果是 [1, NaN, NaN]

// 通常使用parseInt时,只需要传递一个参数.但实际上,parseInt可以有两个参数.第二个参数是进制数.可以通过语句"alert(parseInt.length)===2"来验证.
// map方法在调用callback函数时,会给它传递三个参数:当前正在遍历的元素, 元素索引, 原数组本身.
// 第三个参数parseInt会忽视, 但第二个参数不会,也就是说,parseInt把传过来的索引值当成进制数来使用.从而返回了NaN.

/*
//应该使用如下的用户函数returnInt

function returnInt(element){
  return parseInt(element,10);
}

["1", "2", "3"].map(returnInt);
// 返回[1,2,3]
*/